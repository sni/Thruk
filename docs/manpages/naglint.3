.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "naglint 3"
.TH naglint 3 "2019-03-29" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
naglint \- beautify nagios config files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  Usage: naglint [options] <file> [<files...>]
\&
\&  Options:
\&  \-h, \-\-help                    Show this help message and exit
\&  \-v, \-\-verbose                 Print verbose output
\&  \-V, \-\-version                 Print version
\&  \-c, \-\-config                  config file. Default is ~/.naglintrc
\&  \-i                            replace content inline instead of printing to stdout
\&  \-r                            read directories recursivly
\&      \-\-core                    core type can be nagios, icinga or shinken. Will be
\&                                autodetected unless specified.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script beautifies nagios config files.
.PP
.Vb 6
\&  \- clean whitespace
\&  \- clean indention
\&  \- remove deprecated attributes
\&  \- validate duplicate or invalid attributes
\&  \- break long command lines into shorter pieces
\&  \- sort attributes naturally
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
naglint has the following arguments:
.IP "\fB\-h\fR , \fB\-\-help\fR" 4
.IX Item "-h , --help"
.Vb 1
\&    print help and exit
.Ve
.IP "\fB\-v\fR , \fB\-\-verbose\fR" 4
.IX Item "-v , --verbose"
.Vb 1
\&    print verbose output too
.Ve
.IP "\fB\-c\fR , \fB\-\-config\fR" 4
.IX Item "-c , --config"
.Vb 1
\&    use different config file. Default locations are ~/.naglintrc and /etc/thruk/naglint.conf
.Ve
.IP "\fB\-V\fR , \fB\-\-version\fR" 4
.IX Item "-V , --version"
.Vb 1
\&    print version and exit
.Ve
.IP "\fB\-\-core\fR" 4
.IX Item "--core"
.Vb 3
\&    use specific config type. can be \*(Aqnagios\*(Aq, \*(Aqicinga\*(Aq or \*(Aqshinken\*(Aq.
\&    enables core type specific attributes. Will be autodetected unless
\&    specified.
.Ve
.IP "\fB\-i\fR" 4
.IX Item "-i"
.Vb 1
\&    edit given files inline and overwrite them with their beautified objects
.Ve
.IP "\fB\-r\fR" 4
.IX Item "-r"
.Vb 1
\&    read directories recursivly
.Ve
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
returns 0 on success or number of errors otherwise
.SH "CONFIG"
.IX Header "CONFIG"
see \s-1FILES\s0 section for where to store config options.
.IP "indent_object_key" 4
.IX Item "indent_object_key"
.Vb 1
\&    Number of spaces before object attribute names. Default 2
.Ve
.IP "indent_object_value" 4
.IX Item "indent_object_value"
.Vb 1
\&    Number of spaces before objects attribute values. Default 30
.Ve
.IP "indent_object_comments" 4
.IX Item "indent_object_comments"
.Vb 1
\&    Number of spaces before inline comments. Default 68
.Ve
.IP "list_join_string" 4
.IX Item "list_join_string"
.Vb 1
\&    Should list attributes be joined with space or not. Default \*(Aq,\*(Aq
.Ve
.IP "break_long_arguments" 4
.IX Item "break_long_arguments"
.Vb 1
\&    Should long arguments be broken into multiple lines. Default 1
.Ve
.IP "object_attribute_key_order" 4
.IX Item "object_attribute_key_order"
.Vb 1
\&    list of attributes which should be on top of the object
.Ve
.IP "object_cust_var_order" 4
.IX Item "object_cust_var_order"
.Vb 1
\&    list of custom variables which will be put on top of other custom variables
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Beautify single config file
.PP
.Vb 1
\&  %> naglint objects.cfg > beauty.cfg
.Ve
.PP
Beautify and replace single config file inline
.PP
.Vb 1
\&  %> naglint \-i objects.cfg
.Ve
.PP
Process objects from \s-1STDIN\s0
.PP
.Vb 1
\&  %> cat objects.cfg | naglint > beauty.cfg
.Ve
.SH "FILES"
.IX Header "FILES"
~/.naglintrc
.PP
.Vb 1
\&  user config file
.Ve
.PP
/etc/thruk/naglint.conf
.PP
.Vb 1
\&  global config file
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
2012, Sven Nierlein, <sven@nierlein.de>

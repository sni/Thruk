.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "thruk 3"
.TH thruk 3 "2015-11-10" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
thruk \- Command Line Utility for Thruk Monitoring Gui
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  Usage: thruk [options] [url|files...]
\&
\&  Options:
\&  \-h, \-\-help                    Show this help message and exit
\&  \-v, \-\-verbose                 Print verbose output
\&  \-V, \-\-version                 Print version
\&
\&  \-b, \-\-backend=<backend>       Comma seperated list of backends/sites
\&                                which should be used for querys.
\&  \-l, \-\-list\-backends           List available backends/sites.
\&  \-a, \-\-action=<action>         Perform given action. see below for a list.
\&
\&  \-A, \-\-auth=<auth>             Set username for querys
\&
\&  \-c, \-\-credential=<pw>         Credential when connecting to remote
\&                                Thruk installations specified by the
\&                                remote\-url.
\&  \-r, \-\-remote\-url=<url>        URL to remote installation.
\&      \-\-local                   Don\*(Aqt try to connect fastcgi daemon first.
\&
\&  \-y, \-\-yes                     answer yes to all given questions.
\&  \-f, \-\-force                   some actions need to be forced
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script gives access to various parts of the Thruk gui and allows to generate
excel reports, csv exports or any other url by using command line and bypassing the
webserver.
.SH "OPTIONS"
.IX Header "OPTIONS"
script has the following arguments
.IP "\fB\-h\fR , \fB\-\-help\fR" 4
.IX Item "-h , --help"
.Vb 1
\&    print help and exit
.Ve
.IP "\fB\-v\fR , \fB\-\-verbose\fR" 4
.IX Item "-v , --verbose"
.Vb 1
\&    print verbose output too
.Ve
.IP "\fB\-V\fR , \fB\-\-version\fR" 4
.IX Item "-V , --version"
.Vb 1
\&    print version and exit
.Ve
.IP "\fB\-b\fR \fIbackend\fR, \fB\-\-backend\fR=\fIbackend\fR" 4
.IX Item "-b backend, --backend=backend"
.Vb 3
\&    specify backend(s), otherwise the default backends will be
\&    used. Specify the key of the backend. Use <\-l> to get a list
\&    of backends.
\&
\&    All default backends (backends without the \*(Aqhidden\*(Aq flag) will be used unless
\&    backend(s) are specified with this option.
\&
\&    Use \*(AqALL\*(Aq to use all backends, regardless of the hidden flag.
.Ve
.IP "\fB\-l\fR , \fB\-\-list\-backends\fR" 4
.IX Item "-l , --list-backends"
.Vb 1
\&    get list of available backends
.Ve
.IP "\fB\-a\fR \fIaction\fR, \fB\-\-action\fR=\fIaction\fR" 4
.IX Item "-a action, --action=action"
.Vb 5
\&    perform selected action:
\&      \- url=<url>                   output url result
\&        \-i / \-\-all\-inclusive        includes all css, javascript and images in the resulting html page
\&      \- report=<nr>                 generate report
\&      \- reportmail=<nr>             send report by mail
\&
\&    Logcache: ( MySQL / MongoDB )
\&      \- logcacheimport(=blocksize)  initial logcache import. Blocksize is in seconds. Defaults is one day. (hint: use \-\-start=3w to import last 3weeks only)
\&      \- logcacheupdate              update logcache
\&      \- logcacheauthupdate          update logcache authorization information
\&      \- logcachestats               print logcache statistics
\&      \- logcacheclean(=days)        clean everything older than specified number of days. Default is one year.
\&      \- logcacheoptimize            optimize and repair logcache (mysql only)
\&      \- logcacheremoveunused        remove old tables from no longer used backends (mysql only)
\&
\&    Livestatus Cache:
\&      \- livecachestart              start shadownaemons livecache
\&      \- livecachestop               stop all shadownaemons
\&      \- livecacherestart            restart livecaches for each site sequentially
\&      \- livecachestatus             show livecache status
\&
\&    Data Commands
\&      \- listbackends                list all backends
\&      \- listhosts                   list hostnames
\&      \- listhostgroups              list hostgroupnames
\&      \- command <host> <service>    print used command line for this host/service
\&
\&    Selfcheck Commands
\&      \- selfcheck(=subtype)         run self check(s)
\&                                    availabel subtypes:
\&                                     \- filesystem
\&                                     \- logfiles
\&                                     \- reports
\&                                     \- recurring_downtimes
\&
\&    Internal Commands
\&      \- installcron                 update cronjobs for downtimes and reports
\&                                    (only needed during package installation)
\&      \- uninstallcron               remove all thruk cronjobs
\&                                    (only needed during package deinstallation)
\&      \- compile                     compile templates for faster access
\&      \- bp/bpd(=nr)                 calculate all/specified business process(es)
\&      \- bpcommit                    write objects for business processes and reloads core
\&      \- clean_dashboards            remove empty dashboards which are older than 1 day
.Ve
.IP "\fB\-A\fR \fIauthname\fR, \fB\-\-auth\fR=\fIauthname\fR" 4
.IX Item "-A authname, --auth=authname"
.Vb 1
\&    use this username for authentication
.Ve
.IP "\fB\-c\fR \fIcredential\fR, \fB\-\-credential\fR=\fIcredential\fR" 4
.IX Item "-c credential, --credential=credential"
.Vb 1
\&    use this key for authentication when using remoteurl
.Ve
.IP "\fB\-r\fR \fIremote-url\fR, \fB\-\-remote\-url\fR=\fIremote-url\fR" 4
.IX Item "-r remote-url, --remote-url=remote-url"
.Vb 4
\&    Connect to this remote instance instead of the local one.
\&    Defaults to http://localhost/thruk/cgi\-bin/remote.cgi.
\&    Retrieving information from the fcgi daemon saves time to
\&    startup and allows to connect to remote located sites.
.Ve
.IP "\fB\-\-local\fR" 4
.IX Item "--local"
.Vb 2
\&    Don\*(Aqt contact remote server. Normally remote\-url is tried first for
\&    faster access.
.Ve
.IP "\fB\-y\fR , \fB\-\-yes\fR" 4
.IX Item "-y , --yes"
.Vb 1
\&    answer yes to a given questions during commands.
.Ve
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
thruk returns 0 on success and >= 1 otherwise
.SH "EXAMPLES"
.IX Header "EXAMPLES"
List available backends:
.PP
.Vb 1
\&  %> thruk \-l
.Ve
.PP
Export the event log as excel file:
.PP
.Vb 1
\&  %> thruk \-A thrukadmin \-a \*(Aqurl=/thruk/cgi\-bin/showlog.cgi?view_mode=xls\*(Aq > eventlog.xls
.Ve
.PP
Urls can be shortened.
Export all services into an excel file:
.PP
.Vb 1
\&  %> thruk \*(Aqstatus.cgi?view_mode=xls&host=all\*(Aq > allservices.xls
.Ve
.PP
Export service availability data into a csv file:
.PP
.Vb 1
\&  %> thruk \-A thrukadmin \-a \*(Aqurl=avail.cgi?host=all&timeperiod=last7days&csvoutput=1\*(Aq > all_host_availability.csv
.Ve
.PP
Generate pdf report
.PP
.Vb 1
\&  %> thruk \-a \*(Aqreport=1\*(Aq > report.pdf
.Ve
.PP
Generate pdf report and send it by mail:
.PP
.Vb 1
\&  %> thruk \-a \*(Aqreportmail=1\*(Aq
.Ve
.PP
Reschedule next check for host localhost now:
.PP
.Vb 1
\&  %> thruk \*(Aqcmd.cgi?cmd_mod=2&cmd_typ=96&host=localhost&start_time=now\*(Aq
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Sven Nierlein, 2009\-2014, <sven@nierlein.org>

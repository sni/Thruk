# Thruk Settings

######################################
#
# !!! DONT CHANGE THIS FILE !!!
#
# If you want to change configuration settings put
# the items you want to override in your thruk_local.conf.
# Configuration is merged from both files then.
# This file will be replaced on every update.
#
######################################

######################################
# set the url prefix for all urls
url_prefix = /

######################################
# Changes the path to your logo images. Default is
# $url_prefix+'thruk/themes/'+$current_theme+'/images/logos/' and
# therefor relative to the current selected theme. You could set a fixed
# path here.
# Like usual, paths starting with a / will be absolute from your
# webserver root directory. Paths starting without a / will be relative
# to the cgi directory.
#logo_path_prefix = /icons/

# location of your logos in your filesystem. This directory should be
# mapped to your 'logo_path_prefix' directory where 'logo_path_prefix' is
# the path relative to your webserver root directory and 'physical_logo_path' is
# the corresponding filesystem path.
#physical_logo_path = /usr/local/share/icons

######################################
# change path to your host / service action icons. You may use relative paths
# to specify completely different location.
# you also may want to use 'action_pnp.png' when using pnp.
# icon can be overriden by a custom variable '_ACTION_ICON'.
#host_action_icon    = action.gif
#service_action_icon = action.gif

######################################
# set the title prefix for all urls
# this piece of text will be prepended to
# all page titles.
#title_prefix = Prod

######################################
# uses bookmark names as page titles where possible
# works best without frames
# can be overrided by adding the title
# parameter on most pages
use_bookmark_titles = 0

######################################
# uses more descriptive page titles.
# bookmark titles take precedence and
# can be overriden by adding the title
# parameter on most pages
use_dynamic_titles = 1

######################################
# use this timezone instead of the system timezone
#use_timezone = CET

######################################
# determines if host contacts are allowed for services
# on this host or not
use_strict_host_authorization = 0

######################################
# convert authenticated username to lowercase
#make_auth_user_lowercase = 0

# convert authenticated username to uppercase
#make_auth_user_uppercase = 0

# convert authenticated username by regular expression
#make_auth_replace_regex = s/^(.*?)@.*/$1/gmx

# Allow specific hosts to bypass the csrf protection which
# requires a generated token to submit certain post requests,
# for example sending commands. Wildcards are allowed.
csrf_allowed_hosts=127.0.0.1
csrf_allowed_hosts=::1

# Disable the possibility for a user to change his password.
# Only works with htpasswd passwords. To make this work
# you have to set a `htpasswd` entry in the Config Tool section.
disable_user_password_change = 0

# Sets the minimum lenght a password must have for users changing their passwords.
# Admins still can change the password any way they want in the config tool. This
# just affects the user password reset.
user_password_min_length = 5

# maximum memory usage (in MB) after which a
# thruk process will exit after the request
# (fcgid only)
max_process_memory = 1000

######################################
# location of your cgi.cfg
cgi.cfg             = cgi.cfg

######################################
# use frames, can be useful for addons
use_frames          = 1

######################################
# use histograms, shows histogram links
use_feature_histogram = 0

######################################
# use trends, shows trend links
use_feature_trends = 1

######################################
# use recurring downtime, shows recurring downtime links
use_feature_recurring_downtime = 1

######################################
# use service's description instead of display name
use_service_description = 0

######################################
# normally passive checks would be marked as disabled.
# with this option, disabled checks will only be displayed as disabled
# if their last result was active
strict_passive_mode = 1

######################################
# normally passive checks whould be displayed with a passive icon
# if their last result is passive.
# with this option, passive icon will be hidden in status details.
hide_passive_icon = 0

######################################
# delay the page delivery until the backends uptime is
# at least this amount of seconds. Displaying pages soon
# after backend restarts displays wrong results and all
# services are pending. Enable this if you experience problems
# with pending services after reloading your backend
# ex.: setting this to 10 would start serving pages 10 seconds
# after the backend reload
delay_pages_after_backend_reload = 0

######################################
# ssl_verify_hostnames can be set to enable / disable hostname verification
# for https connections. For example for the cookie login or the http backend.
ssl_verify_hostnames=1

######################################
# start page
# add a custom start page which will be displayed instead of the useless page
# with version information.
#start_page = /thruk/main.html

######################################
# target of the link when clicking on main logos
#home_link = http://www.thruk.org

######################################
# target of the docs link, you may add your monitoring
# documenation here
# use a blank value to remove the docs link
#documentation_link = /thruk/docs/

######################################
# customized link for all problems
#all_problems_link = /thruk/cgi-bin/status.cgi?style=combined&amp;hst_s0_hoststatustypes=4&amp;hst_s0_servicestatustypes=31&amp;hst_s0_hostprops=10&amp;hst_s0_serviceprops=0&amp;svc_s0_hoststatustypes=3&amp;svc_s0_servicestatustypes=28&amp;svc_s0_hostprops=10&amp;svc_s0_serviceprops=10&amp;svc_s0_hostprop=2&amp;svc_s0_hostprop=8&amp;title=All+Unhandled+Problems

######################################
# allowed framed links
# which links in addition to the documentation_link
# can be framed by linking to /thruk/frame.html?link=...
#allowed_frame_links = http://my-company/

######################################
# use new search
use_new_search      = 1

# Show the new split command box on the host / service details page
use_new_command_box = 1

######################################
# use ajax search
use_ajax_search           = 1  # enable ajax search
ajax_search_hosts         = 1  # suggest hosts while typing
ajax_search_hostgroups    = 1  # suggest hostgroups while typing
ajax_search_services      = 1  # suggest services while typing (can be slow which large amount of services)
ajax_search_servicegroups = 1  # suggest servicegroups while typing
ajax_search_timeperiods   = 1  # suggest timeperiods while typing

######################################
# default service filter
#default_service_filter = service_description_filter

######################################
# themes
default_theme       = Thruk2

######################################
# path used for cookies. Do not change unless you have weird url rewrites which
# breaks setting cookies.
#cookie_path = /

######################################
# temporary directory, used for template cache...
#tmp_path = /tmp

######################################
# var directory, used to store user settings
#var_path = ./var

######################################
# mode used when creating or saving files
#mode_file = 0660
#mode_dir  = 0770

######################################
# files owners for new / changed files
#thruk_user=thruk
#thruk_group=thruk

######################################
# server side includes
#ssi_path = ssi/

######################################
# path to your plugins
# see documentation for further steps if
# you change the plugin path
#plugin_path = plugins/

######################################
# path to your themes
# see documentation for further steps if
# you change the themes path
#themes_path = themes/

######################################
# custom templates
#user_template_path = ./my_templates

######################################
# log4perl config
#log4perl_conf = ./log4perl.conf

######################################
# use paged data instead of all data in one huge page
# the * sets the default selected paging size
use_pager             = 1
paging_steps          = *100, 500, 1000, 5000, all

# paging for groups pages has different size
group_paging_overview = *3,  10, 100, all
group_paging_summary  = *10, 50, 100, all
group_paging_grid     = *5,  10, 50,  all

######################################
# status page
# when a plugin returns more than one line of output, the
# output can be displayed directly in the status table, as
# popup or not at all.
# choose between popup, inline and off
show_long_plugin_output = popup

# color complete status line with status colour or just the status
# itself.
status_color_background = 0

# on which event should the comments / downtime or
# longpluginout popup show up
# usefull values are onclick or onmouseover
info_popup_event_type = onclick

# options for the popup window used for
# long pluginoutput, downtimes and comments
# see http://www.bosrup.com/web/overlib/?Command_Reference
# for what options are available
info_popup_options    = STICKY,CLOSECLICK,HAUTO,MOUSEOFF

# show number of notifications on the status details page
show_notification_number = 1

# show links to config tool for each host / service
# you need to have the config tool plugin enabled
# and you need sufficient permissions for the link to appear
show_config_edit_buttons = 0

# display the backend name in the status details table
show_backends_in_table=0

# list of default columns on host details page.
# determines which columns and the order of the displayed columns.
# rename columns with column1,column2:name,...
#default_host_columns = name,state,last_check,duration,plugin_output

# list of default columns on service details page.
# determines which columns and the order of the displayed columns.
# rename columns with column1,column2:name,...
#default_service_columns = host_name,description,state,last_check,duration,current_attempt,plugin_output

# show additional logout button next to the top right preferences button.
# (works only together with cookie authentication)
#show_logout_button=0

# Display the full command line for host / service checks.
# Be warned: the command line could contain passwords
# and other confidential data.
# In order to replace the user macros for commands, you have to set
# the 'resource_file' in your peer config or a general resource_file
# option.
# See the next option.
# 0 = off, don't show the command line at all
# 1 = show them for all with the role: authorized_for_configuration_information
# 2 = show them for everyone
show_full_commandline = 1

# usually the source of your expanded check_command should
# be the check_command attribute of your host / service. But under
# certain circumstances you might want to use display expanded
# commands from a custom variable. In this case, set
# 'show_full_commandline_source' to '_CUST_VAR_NAME'.
show_full_commandline_source = check_command

# Set a general resource file.
# Be warned: if any macros contain sensitive data like passwords, setting
# this option could expose that data to unauthorized user. It is strongly
# recommended that this option is only used if no passwords are used in
# this file or in combination with the 'expand_user_macros' option which
# will limit which macros are exposed to the user.
# Instead of using a general resource_file, you could define one file
# per peer in your peer config.
#
#resource_file = path_to_your/resource.cfg

# enable a performance bar inside the status/host list which
# create a graph from the performance data of the plugin output. Available
# options are 'match', 'first', 'all', 'worst' and 'off'.
perf_bar_mode = match

# show pnp popup if performance data are available and
# pnp is used as graph engine.
perf_bar_pnp_popup = 1

# show inline pnp graph if available
# if a service or host has a pnp4nagios action url set
# thruk will show a inline graph on the extinfo page
shown_inline_pnp = 1

# graph_word is a regexp used to display any graph on the details page.
# if a service or host has a graph url in action url (or notes url) set
# it can be displayed by specifying a regular expression that always appears
# in this url.
# examples:
#  for pnp4nagios: /pnp4nagios/
#  for graphite:   /render/
#graph_word =


# graph_replace is another regular expression to rewrite special characters
# in the url. For example graphite requires all non-word characters replaced
# by underscores while graphios needs spaces removed too. You can use this
# setting multiple times.
# examples:
#  for pnp4nagios:
#  for graphite:   s/[^\w\-]/_/gmx
#  for graphios:   s/\s//gmx
#graph_replace = s/[^\w\-]/_/gmx


# show custom vars in host / service ext info.
# list variable names to display in the host
# and service extinfo details page.
# can be specified more than once to define multiple
# variables. You may use html in your variables.
# Use * as wildcard, ex.: _VAR*
# To show a host custom variable for services too, prepend
# _HOST, ex.:  _HOSTVAR1. To show all host variables, use
# wildcards like _HOST*
#show_custom_vars = _VAR1
#show_custom_vars = _VAR2


# Expand user macros ($USERx$) for host / service
# commands and custom variables.
# Can be specified more than once to define multiple
# user macros to expand.
# Be warned: some user macros can contain passwords
# and expanding them could expose them to unauthorized
# users.
# Use * as wildcard, ex.: USER*
#
#Defaults to 'ALL' which means all user macros are expanded, because
#its limited to admin users anyway.
#expand_user_macros = USER1
#expand_user_macros = USER10-20
#expand_user_macros = PLUGIN*
#expand_user_macros = ALL  # expands all user macros
#expand_user_macros = NONE # do not expand user macros


# show if a host / service has modified attributes.
show_modified_attributes = 1

# Show check attempts for hosts too. The default is to show
# them on the problems page only. Use this value to force a value.
#show_host_attempts = 1

######################################
# Command Settings
# Set this if a contact should be allowed to send commands unless
# defined for the contact itself. This is the default value for all
# contacts unless the user has a can_submit_commands setting in your
# monitoring configuration.
can_submit_commands = 1

# disable some commands completely
# you can use ranges here, ex.: 5,10-47,99
#command_disabled = 14 # shutdown
#command_disabled = 35 # start executing service checks
#command_disabled = 36 # stop executing service checks
#command_disabled = 88 # start executing host checks
#command_disabled = 89 # stop executing host checks

# default states for commands option checkboxes
<cmd_defaults>
    ahas                   = 0  # For Hosts Too
    broadcast_notification = 0  # Broadcast
    force_check            = 0  # Forced Check
    force_notification     = 0  # Forced Notification
    send_notification      = 1  # Send Notification
    sticky_ack             = 1  # Sticky Acknowledgement
    persistent_comments    = 1  # Persistent Comments
    persistent_ack         = 0  # Persistent Acknowledgement Comments
    ptc                    = 0  # For Child Hosts Too
    use_expire             = 0  # Use expire for acknowledgements (for cores which support this)
</cmd_defaults>

# configure which commands should be available as quick status commands
<cmd_quick_status>
    default                = "reschedule next check"  # text has to match the select text
    reschedule             = 1  # Reschedule next check
    downtime               = 1  # Add/remove downtimes
    comment                = 1  # Add/remove comments
    acknowledgement        = 1  # Add/remove acknowledgements
    active_checks          = 1  # Enable/disable active checks
    notifications          = 1  # Enable/disable notifications
    submit_result          = 1  # Submit passive check result
    reset_attributes       = 1  # Reset modified attributes
</cmd_quick_status>

# force acknowledgments to be sticky
force_sticky_ack           = 0

# force notification to be sent on acknowledgement
force_send_notification    = 0

# force comments on acknowledgements to be persistent
force_persistent_ack       = 0

# for regular comments to be persistent
force_persistent_comments  = 0

# default duration of new downtimes
downtime_duration   = 7200

# maximum duration of new downtimes. Use quantifiers like d=days, w=weeks,
# y=years to set human readable values. Default is unlimited.
#downtime_max_duration = 4w

# default duration of acknowledgements with expire date
expire_ack_duration = 86400

# command alias can be used for agent based checks, where the active agent
# check should be rescheduled instead of the passive check.
# Have a look at the documentation for a detailed description.
#command_reschedule_alias = servicename_or_commandname_pattern;agent_service_name

######################################
# Time Format Settings
datetime_format        = %Y-%m-%d  %H:%M:%S
datetime_format_today  = %H:%M:%S
datetime_format_long   = %a %b %e %H:%M:%S %Z %Y
datetime_format_log    = %B %d, %Y  %H
datetime_format_trends = %a %b %e %H:%M:%S %Y

#####################################
# This one activates all problem/impact and criticity
# features. Currently it will only work with shinken
# backends. Dont enable it unless all your backends are shinken.
# If not set, it will be automatically enabled when using only
# shinken backends.
#enable_shinken_features = 0

# configure names for the priorities of your hosts / services
# this is a shinken specific feature only (criticity)
#<priorities>
#  5   = Business Critical
#  4   = Top Production
#  3   = Production
#  2   = Standard
#  1   = Testing
#  0   = Development
#</priorities>

#####################################
# This one activates all icinga specific features
# When not set, Thruk will try to autodetect the core,
# but this currently only works within OMD.
#enable_icinga_features = 0

#####################################
# Apache Status
# You can integrate the output of apache status into Thruk.
# The following list of apache status pages will be accessible
# from the performance info page.
<apache_status>
    # Site        http://127.0.0.1:5000/server-status
    # System      http://127.0.0.1/server-status
    # Other       http://127.0.0.1/server-status
</apache_status>

#####################################
# cron settings
# Specifiy a file which is then completly under the control of Thruk.
# It will be used to store cronjobs, ex. for reports. The file has to
# be writable by Thruk.
cron_file          = /tmp/thruk_cron.tmp

# The pre edit cmd can be used to do run a command just before thruk
# will edit the crontab.
cron_pre_edit_cmd  = /usr/bin/crontab -l > /tmp/thruk_cron.tmp

# The post edit cmd is necessary for OMD where you need to reload the
# crontab after editing.
cron_post_edit_cmd = /usr/bin/crontab /tmp/thruk_cron.tmp && rm -f /tmp/thruk_cron.tmp

#####################################
# path setting
# Path to your thruk executable. Will be used in cronjobs.
#thruk_bin = /usr/bin/thruk

# Path to your thruk init script. Will be used to restart thruk.
#thruk_init = /etc/init.d/thruk

# Set first day of week. Used in reports.
# Sunday: 0
# Monday: 1
#first_day_of_week = 1

# Large reports will use temp files to avoid extreme memory usage.
# With 'report_use_temp_files' you may set the report duration in days
# which will trigger the use of temp files. Default is 14days, so
# for example the 'last31days' report will use temp files, the 'thisweek'
# not. Can be disabled by setting to 0.
# report_use_temp_files = 14

# Don't create reports with more hosts / services than this number.
# The purpose is to don't wrack the server due to extended memory
# usage. Increase this number if you hit that limit and have plenty
# of memory left.
# report_max_objects = 1000

# Include messages with class = 2 (program messages) in reports.
# Setting this to 0 allows the MySQL backend to use indexes efficiently
# 0 = off
# 1 = auto (default)
# 2 = on
# report_include_class2 = 1

# Should thruk update the logcache databases before running reports?
# Setting this to 0 reduces the time taken to run reports but the most
# recent data is not necessarily available.  If you use this option
# you should probably create a cron to run "thruk -a logcacheupdate"
# report_update_logcache = 1

#####################################
# Waiting is a livestatus feature. When enabled, Thruk will wait
# after rescheduling hosts/services checks until the
# check has been really executed up to a maximum of 20 seconds.
use_wait_feature = 1

# Amount of seconds to wait until a rescheduled check finishes. Thruk
# will wait this amount and display the result immediately.
wait_timeout = 10

#####################################
# set initial menu state.
# closed => 0
# open   => 1
<initial_menu_state>
    General        = 1
    Current_Status = 1
    Reports        = 1
    System         = 1
    Bookmarks      = 1
</initial_menu_state>

#####################################
# mobile useragents
# specify user agents which will be redirected to the mobile plugin (if enabled)
mobile_agent=iPhone,Android,IEMobile,Mobile

#####################################
# bug reporting
# show link to bug reports when internal errors occur.
# set to 'server' to log js error server side. Set to 'both'
# to show the error icon and log it on the server.
show_error_reports = both

# don't report some known harmless javascript errors
skip_js_errors  = cluetip is not a function

# what email address bug reports will be sent to
#bug_email_rcpt = bugs@thruk.org

######################################
# COOKIE AUTH
# cookie auth requires additional webserver settings, see the documentation
# for detailed instructions.
cookie_auth_login_url             = thruk/cgi-bin/login.cgi
cookie_auth_restricted_url        = http://localhost/thruk/cgi-bin/restricted.cgi
cookie_auth_session_timeout       = 604800
cookie_auth_session_cache_timeout = 5
cookie_auth_direct_agents         = (wget|curl)
#cookie_auth_domain               = .domain.com
#cookie_auth_login_hook           = ./bin/hook.sh

######################################
# Add a Internet Explorer (IE) compatibility header to the html header.
#useragentcompat                  = edge

######################################
# LMD - livestatus multitool daemon
# enable lmd cache handling the backend connections.
# LMD handles all backend connections in a separate process
# which will be started automatically with thruk if enabled.

# Enable lmd connection handling. Set to 1 to enable.
#use_lmd_core=0

# path to lmd binary
#lmd_core_bin=/usr/local/go/src/github.com/sni/lmd/lmd/lmd

# path to lmd configuration
#lmd_core_config=/etc/thruk/lmd.ini

######################################
# BACKENDS
# Get the status for remote backends from local instances. This can
# increase performance when using multiple remote sites. It is enabled
# by default when using more than one site. You have to define
# hostchecks in any local backend (using unix sockets) with a name or
# alias of the address of your remote backends.
#check_local_states = 1

# set logging of backend in verbose mode. This only
# makes sense when debug logging is activated
#backend_debug = 0

# use connection pool when accessing multiple sites.
# Increases the performance because backends will be queried
# parallel but uses around 50mb of memory per pool member.
# Disabled when set to 0. (experimental feature)
#connection_pool_size = 0

# Enables caching logfiles for faster access. Cache supports MongoDB
# and Mysql. Format is a connection string like 'mysql://hostname:port/db'.
# Using a cache dramatically decreases cpu and memory usage of Thruk
# when accessing logfiles, for example when creating reports.
#logcache=mysql://hostname:port/thruk_logs

# Define filter which prevents the logcache from overgrowing with useless
# log messages. Since the main reason for the logcache are availability reports
# it is ok to remove some entries. Can be used multiple times.
#logcache_import_exclude = "Warning: Passive check result was received for"

# This option enables/disables the delta updates of the logcache whenever somebody
# opens a page which requires logfiles, ex.: the showlog page. This improves
# the responsiveness of the page but you miss the latest log entries since the
# last manual update.
#logcache_delta_updates = 1

# The import command replaces the builtin logcache update with an external
# script which is then responsible for updating the logcache database.
# This might be useful if you pull the logfiles from a ndo/ido database
# and then manually import those files.
# There are some useful enviromenet variables set before the script is started:
# REMOTE_USER contains the current user.
# THRUK_BACKENDS is a comma separated list of the selected backends.
# THRUK_LOGCACHE is the connection string to the thruk logcache database.
#logcache_import_command = .../importscript.sh

# The sitepanel is used to display multiple backends/sites at a glance.
# With than 10 or more sites, the list of backends will be combined
# into the 'compact' site panel which just displays the totals of
# available / down / disabled sites. The 'compact' panel will also
# automatically be used if you use sections.
# With more than 50 backends, the 'collapsed' will be selected in 'auto' mode.
# Set sitepanel to list/compact/collapsed/auto/off to change the default behaviour.
#sitepanel=auto

######################################
# Backend Configuration, enter your backends here
<Component Thruk::Backend>
#    <peer>
#        name   = Local Naemon
#        type   = livestatus
#        hidden = 1             # make this backend hidden by default
#        groups = admins        # make this backend only visible to the admin group
#        <options>
#            peer          = /tmp/livestatus.socket
#            resource_file = path_to_your/resource.cfg
#       </options>
#       <configtool>
#            core_conf      = /etc/naemon/naemon.cfg
#            obj_check_cmd  = /etc/init.d/naemon checkconfig
#            obj_reload_cmd = /etc/init.d/naemon reload
#       </configtool>
#    </peer>
#    <peer>
#        name   = External Naemon
#        type   = livestatus
#        <options>
#            peer    = 172.16.0.1:9999
#       </options>
#    </peer>
#    <peer>
#        name   = External Icinga
#        type   = livestatus
#        <options>
#            peer    = 172.16.0.2:9999
#       </options>
#    </peer>
#    <peer>
#        name   = External Shinken
#        type   = livestatus
#        <options>
#            peer    = 127.0.0.01:50000
#       </options>
#    </peer>
</Component>


######################################
# PLUGINS
######################################

######################################
# CONFIG TOOL
# enable config tool by setting path to different components
# config files. Users with the roles
# authorized_for_configuration_information and authorized_for_system_commands
# will then have access to the config tool.
<Component Thruk::Plugin::ConfigTool>
    show_plugin_syntax_helper = 1

    thruk    = ./thruk_local.conf
    cgi.cfg  = ./cgi.cfg
    #htpasswd = ./htpasswd

    #pre_obj_save_cmd   =
    #post_obj_save_cmd  =
    #git_base_dir       =

    #edit_files         =

    #extra_custom_var_host    = _WORKER
    #extra_custom_var_service = _WORKER, _SNMP_COMMUNITY
</Component>

######################################
# PANORAMA
<Component Thruk::Plugin::Panorama>
    # Can be a list (comma seperated) of
    # (public) dashboards which will be
    # used as default view if the user has not set
    # its own view already.
    #default_dashboard = <nr>

    # make panels, tabs and dashboard readonly.
    # users will not be able to change, resize or add
    # panels.
    #readonly = 0

    # full page reload every 3 hours to prevent memory
    # leaks. Disabled when set to 0.
    full_reload_interval = 10800

    # set start number for new files
    new_files_start_at = 1

    # default start for new geo maps (lon,lat)
    geo_map_default_center = 13.74,47.77
    geo_map_default_zoom   = 5

    # wms provider serve map tile data for geo maps according to
    # http://dev.openlayers.org/docs/files/OpenLayers/Layer/WMS-js.html#OpenLayers.Layer.WMS.OpenLayers.Layer.WMS
    # find more wms provider here: http://wiki.openstreetmap.org/wiki/WMS#OSM_WMS_Servers
    wms_provider = Open Street Map                  = ["https://maps.thruk.org/service?", {"layers": "osm", "format": "image/png"}, { "attribution": "&copy; OpenStreetMap <a href='http://www.openstreetmap.org/copyright/en' target='_blank'>contributors<a>" }]
    wms_provider = irs.gis-lab.info                 = ["http://irs.gis-lab.info/?layers=osm&"]
    wms_provider = www.osm-wms.de (osm)             = ["http://129.206.228.72/cached/osm?", {"layers": "osm_auto:all", "format": "image/png"}]
    wms_provider = www.osm-wms.de (hillshade)       = ["http://129.206.228.72/cached/hillshade?", {"layers": "osm_auto:all", "format": "image/png"}]
</Component>

######################################
# REPORTS 2
<Component Thruk::Plugin::Reports2>
    # execute regular scheduled reports with this nice level
    #report_nice_level = 5

    # maximum number of running reports at a time
    #max_concurrent_reports = 2

    # url used to replace relative links in html reports
    #report_base_url=http://host.local/thruk/cgi-bin/

    # phantomjs is used to convert html pages into pdf
    #phantomjs = /path/to/phantomjs

    # pnp export script is used to export pnp graphs into reports
    #pnp_export = /path/to/pnp_export.sh

    # set the from address used in e-mail reports
    #report_from_email = User Name <example@mail.com>

    # set the default template used for new reports
    #default_template = sla_host.tt
</Component>

#####################################
# STATUSMAP
<Component Thruk::Plugin::Statusmap>
    # you may change the default map type of the statusmap here. Valid
    # types are: 'table' and 'circle'
    #default_type    = table

    # and the statusmap default group by which has to be one of:
    # 'parent', 'address', 'domain', 'hostgroup', 'servicegroup'
    #default_groupby = address
</Component>

#####################################
# MINEMAP
<Component Thruk::Plugin::Minemap>
    # you may change the default minemap link here
    #default_link = /thruk/cgi-bin/minemap.cgi
</Component>

#####################################
# Business Process
<Component Thruk::Plugin::BP>
    # Results will be send back by using the spool folder.
    # This folder should point to the 'check_result_path' of your core.
    #spool_dir = /var/naemon/rw/check_results

    # as alternative to the spool_dir, a livestatus connection can be used
    # to send results to the core.
    #result_backend = sitename

    # Save objects to this file. Content will be overwritten.
    #objects_save_file = /etc/naemon/conf.d/thruk_bp_generated.cfg

    # Save format can be either 'nagios' or 'icinga2'.
    #objects_save_format = nagios

    # User maintained file containing templates used for business process services.
    #objects_templates_file = /etc/naemon/conf.d/thruk_templates.cfg

    # Command to apply changes to the objects_save_file. If not set and
    # and result_backend is used, the restart will be triggered as external command.
    #objects_reload_cmd = /etc/init.d/naemon reload

    # hooks which will be executed before or after saving.
    #pre_save_cmd   =
    #post_save_cmd  =

    # Refresh interval defines how often business processes
    # will be recalculated and refreshed. (in minutes)
    #refresh_interval = 1
</Component>

#####################################
# Action Menus
#action_menu_items_folder = ./action_menus/

<action_menu_items>
    #hostmenu = {\
    #   "icon": "/thruk/themes/{{theme}}/images/dropdown.png",\
    #   "title": "Host Menu",\
    #   "menu": [\
    #       {\
    #           "icon": "/thruk/themes/{{theme}}/images/page_white_text.png",\
    #           "label": "Example Link",\
    #           "action": "https://example.org",\
    #           "target": "_blank"\
    #       },\
    #       "-",\
    #       {\
    #           "icon": "/thruk/themes/{{theme}}/images/arrow_refresh.png",\
    #           "label": "Refresh",\
    #           "action": "server://refresh/$HOSTNAME$",\
    #           "target": "_blank"\
    #       },\
    #   ]\
    #}
    #servicemenu = {\
    #   "icon": "/thruk/themes/{{theme}}/images/dropdown.png",\
    #   "title": "Service Menu",\
    #   "menu": [\
    #       {\
    #           "icon": "/thruk/themes/{{theme}}/images/page_white_text.png",\
    #           "label": "Example Link",\
    #           "action": "https://example.org",\
    #           "target": "_blank"\
    #       },\
    #       "-",\
    #       {\
    #           "icon": "/thruk/themes/{{theme}}/images/arrow_refresh.png",\
    #           "label": "Refresh",\
    #           "action": "server://refresh/$HOSTNAME/$SERVICEDESC$",\
    #           "target": "_blank"\
    #       },\
    #   ]\
    #}
</action_menu_items>

<action_menu_actions>
    #example   = /usr/local/bin/sample.sh $HOSTNAME$ $SERVICEDESC$ $USER20$
    #refresh   = /usr/local/bin/refresh.sh otherargs
</action_menu_actions>

<action_menu_apply>
    #hostmenu    = .*;$             # matches all hosts only
    #servicemenu = .*;.+$           # matches all services on all hosts
    #specialmenu = ^Host;Service$   # matches an exact service on one host only
    #cpu_menu    = .*;^CPU          # matches all services starting with 'CPU'
    #hostmenu    = ^Host            # matches all hosts starting with 'Host'
    #demomenu    = ^Demo;           # matches all services on the 'Demo' host
    #demomenu    = ^Test;           # a menu name can be used multiple times
</action_menu_apply>
